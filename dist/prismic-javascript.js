(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("PrismicJS", [], factory);
	else if(typeof exports === 'object')
		exports["PrismicJS"] = factory();
	else
		root["PrismicJS"] = factory();
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/cross-fetch/dist/browser-polyfill.js":
/*!***********************************************************!*\
  !*** ./node_modules/cross-fetch/dist/browser-polyfill.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function(self) {\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob();\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    };\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue+','+value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) { items.push(name); });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) { items.push(value); });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) { items.push([name, value]); });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=');\n        var name = split.shift().replace(/\\+/g, ' ');\n        var value = split.join('=').replace(/\\+/g, ' ');\n        form.append(decodeURIComponent(name), decodeURIComponent(value));\n      }\n    });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n      var xhr = new XMLHttpRequest();\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  };\n  self.fetch.polyfill = true;\n})(typeof self !== 'undefined' ? self : this);\n\n\n//# sourceURL=webpack://PrismicJS/./node_modules/cross-fetch/dist/browser-polyfill.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack://PrismicJS/./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/promise-polyfill/src/finally.js":
/*!******************************************************!*\
  !*** ./node_modules/promise-polyfill/src/finally.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (function(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      return constructor.resolve(callback()).then(function() {\n        return constructor.reject(reason);\n      });\n    }\n  );\n});\n\n\n//# sourceURL=webpack://PrismicJS/./node_modules/promise-polyfill/src/finally.js?");

/***/ }),

/***/ "./node_modules/promise-polyfill/src/index.js":
/*!****************************************************!*\
  !*** ./node_modules/promise-polyfill/src/index.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(setImmediate) {/* harmony import */ var _finally__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./finally */ \"./node_modules/promise-polyfill/src/finally.js\");\n\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  this._state = 0;\n  this._handled = false;\n  this._value = undefined;\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = _finally__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!arr || typeof arr.length === 'undefined')\n      throw new TypeError('Promise.all accepts an array');\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(values) {\n  return new Promise(function(resolve, reject) {\n    for (var i = 0, len = values.length; i < len; i++) {\n      values[i].then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Promise);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../timers-browserify/main.js */ \"./node_modules/timers-browserify/main.js\").setImmediate))\n\n//# sourceURL=webpack://PrismicJS/./node_modules/promise-polyfill/src/index.js?");

/***/ }),

/***/ "./node_modules/promise-polyfill/src/polyfill.js":
/*!*******************************************************!*\
  !*** ./node_modules/promise-polyfill/src/polyfill.js ***!
  \*******************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index */ \"./node_modules/promise-polyfill/src/index.js\");\n/* harmony import */ var _finally__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./finally */ \"./node_modules/promise-polyfill/src/finally.js\");\n\n\n\nvar globalNS = (function() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('unable to locate global object');\n})();\n\nif (!globalNS.Promise) {\n  globalNS.Promise = _index__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n} else if (!globalNS.Promise.prototype['finally']) {\n  globalNS.Promise.prototype['finally'] = _finally__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack://PrismicJS/./node_modules/promise-polyfill/src/polyfill.js?");

/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack://PrismicJS/./node_modules/setimmediate/setImmediate.js?");

/***/ }),

/***/ "./node_modules/timers-browserify/main.js":
/*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(/*! setimmediate */ \"./node_modules/setimmediate/setImmediate.js\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack://PrismicJS/./node_modules/timers-browserify/main.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack://PrismicJS/(webpack)/buildin/global.js?");

/***/ }),

/***/ "./src/Api.ts":
/*!********************!*\
  !*** ./src/Api.ts ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar ResolvedApi_1 = __webpack_require__(/*! ./ResolvedApi */ \"./src/ResolvedApi.ts\");\nvar HttpClient_1 = __webpack_require__(/*! ./HttpClient */ \"./src/HttpClient.ts\");\nvar Api = (function () {\n    function Api(url, options) {\n        this.options = options || {};\n        this.url = url;\n        if (this.options.accessToken) {\n            var accessTokenParam = \"access_token=\" + this.options.accessToken;\n            this.url += (url.indexOf('?') > -1 ? '&' : '?') + accessTokenParam;\n        }\n        this.apiDataTTL = this.options.apiDataTTL || 5;\n        this.httpClient = new HttpClient_1[\"default\"](this.options.requestHandler, this.options.apiCache, this.options.proxyAgent);\n    }\n    /**\n     * Fetches data used to construct the api client, from cache if it's\n     * present, otherwise from calling the prismic api endpoint (which is\n     * then cached).\n     */\n    Api.prototype.get = function (cb) {\n        var _this = this;\n        return this.httpClient.cachedRequest(this.url, { ttl: this.apiDataTTL }).then(function (data) {\n            var resolvedApi = new ResolvedApi_1[\"default\"](data, _this.httpClient, _this.options);\n            cb && cb(null, resolvedApi);\n            return resolvedApi;\n        })[\"catch\"](function (error) {\n            cb && cb(error);\n            throw error;\n        });\n    };\n    return Api;\n}());\nexports[\"default\"] = Api;\n\n\n//# sourceURL=webpack://PrismicJS/./src/Api.ts?");

/***/ }),

/***/ "./src/Cookies.ts":
/*!************************!*\
  !*** ./src/Cookies.ts ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\n// Some portions of code from https://github.com/jshttp/cookie\nvar decode = decodeURIComponent;\nfunction tryDecode(str, decode) {\n    try {\n        return decode(str);\n    }\n    catch (e) {\n        return str;\n    }\n}\nfunction parse(str, options) {\n    if (typeof str !== 'string') {\n        throw new TypeError('argument str must be a string');\n    }\n    var obj = {};\n    var opt = options || {};\n    var pairs = str.split(/; */);\n    var dec = opt.decode || decode;\n    pairs.forEach(function (pair) {\n        var eq_idx = pair.indexOf('=');\n        // skip things that don't look like key=value\n        if (eq_idx < 0) {\n            return;\n        }\n        var key = pair.substr(0, eq_idx).trim();\n        var val = pair.substr(++eq_idx, pair.length).trim();\n        // quoted values\n        if ('\"' == val[0]) {\n            val = val.slice(1, -1);\n        }\n        // only assign once\n        if (undefined == obj[key]) {\n            obj[key] = tryDecode(val, dec);\n        }\n    });\n    return obj;\n}\nexports[\"default\"] = { parse: parse };\n\n\n//# sourceURL=webpack://PrismicJS/./src/Cookies.ts?");

/***/ }),

/***/ "./src/HttpClient.ts":
/*!***************************!*\
  !*** ./src/HttpClient.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar cache_1 = __webpack_require__(/*! ./cache */ \"./src/cache.ts\");\nvar request_1 = __webpack_require__(/*! ./request */ \"./src/request.ts\");\nvar HttpClient = (function () {\n    function HttpClient(requestHandler, cache, proxyAgent) {\n        this.requestHandler = requestHandler || new request_1.DefaultRequestHandler({ proxyAgent: proxyAgent });\n        this.cache = cache || new cache_1.DefaultApiCache();\n    }\n    HttpClient.prototype.request = function (url, callback) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this.requestHandler.request(url, function (err, result, xhr, ttl) {\n                if (err) {\n                    reject(err);\n                    callback && callback(err, null, xhr, ttl);\n                }\n                else if (result) {\n                    resolve(result);\n                    callback && callback(null, result, xhr, ttl);\n                }\n            });\n        });\n    };\n    /**\n     * Fetch a URL corresponding to a query, and parse the response as a Response object\n     */\n    HttpClient.prototype.cachedRequest = function (url, maybeOptions) {\n        var _this = this;\n        var options = maybeOptions || {};\n        var run = function (cb) {\n            var cacheKey = options.cacheKey || url;\n            _this.cache.get(cacheKey, function (cacheGetError, cacheGetValue) {\n                if (cacheGetError || cacheGetValue) {\n                    cb(cacheGetError, cacheGetValue);\n                }\n                else {\n                    _this.request(url, function (fetchError, fetchValue, xhr, ttlReq) {\n                        if (fetchError) {\n                            cb(fetchError, null);\n                        }\n                        else {\n                            var ttl = ttlReq || options.ttl;\n                            if (ttl) {\n                                _this.cache.set(cacheKey, fetchValue, ttl, cb);\n                            }\n                            cb(null, fetchValue);\n                        }\n                    });\n                }\n            });\n        };\n        return new Promise(function (resolve, reject) {\n            run(function (err, value) {\n                if (err)\n                    reject(err);\n                if (value)\n                    resolve(value);\n            });\n        });\n    };\n    return HttpClient;\n}());\nexports[\"default\"] = HttpClient;\n\n\n//# sourceURL=webpack://PrismicJS/./src/HttpClient.ts?");

/***/ }),

/***/ "./src/Predicates.ts":
/*!***************************!*\
  !*** ./src/Predicates.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar OPERATOR = {\n    at: 'at',\n    not: 'not',\n    missing: 'missing',\n    has: 'has',\n    any: 'any',\n    \"in\": 'in',\n    fulltext: 'fulltext',\n    similar: 'similar',\n    numberGt: 'number.gt',\n    numberLt: 'number.lt',\n    numberInRange: 'number.inRange',\n    dateBefore: 'date.before',\n    dateAfter: 'date.after',\n    dateBetween: 'date.between',\n    dateDayOfMonth: 'date.day-of-month',\n    dateDayOfMonthAfter: 'date.day-of-month-after',\n    dateDayOfMonthBefore: 'date.day-of-month-before',\n    dateDayOfWeek: 'date.day-of-week',\n    dateDayOfWeekAfter: 'date.day-of-week-after',\n    dateDayOfWeekBefore: 'date.day-of-week-before',\n    dateMonth: 'date.month',\n    dateMonthBefore: 'date.month-before',\n    dateMonthAfter: 'date.month-after',\n    dateYear: 'date.year',\n    dateHour: 'date.hour',\n    dateHourBefore: 'date.hour-before',\n    dateHourAfter: 'date.hour-after',\n    GeopointNear: 'geopoint.near'\n};\nfunction encode(value) {\n    if (typeof value === 'string') {\n        return \"\\\"\" + value + \"\\\"\";\n    }\n    else if (value instanceof Array) {\n        return \"[\" + value.map(function (v) { return encode(v); }).join(',') + \"]\";\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        return null;\n    }\n}\nvar geopoint = {\n    near: function (fragment, latitude, longitude, radius) {\n        return \"[\" + OPERATOR.GeopointNear + \"(\" + fragment + \", \" + latitude + \", \" + longitude + \", \" + radius + \")]\";\n    }\n};\nvar date = {\n    before: function (fragment, before) {\n        return \"[\" + OPERATOR.dateBefore + \"(\" + fragment + \", \" + before.getTime() + \")]\";\n    },\n    after: function (fragment, after) {\n        return \"[\" + OPERATOR.dateAfter + \"(\" + fragment + \", \" + after.getTime() + \")]\";\n    },\n    between: function (fragment, before, after) {\n        return \"[\" + OPERATOR.dateBetween + \"(\" + fragment + \", \" + before.getTime() + \", \" + after.getTime() + \")]\";\n    },\n    dayOfMonth: function (fragment, day) {\n        return \"[\" + OPERATOR.dateDayOfMonth + \"(\" + fragment + \", \" + day + \")]\";\n    },\n    dayOfMonthAfter: function (fragment, day) {\n        return \"[\" + OPERATOR.dateDayOfMonthAfter + \"(\" + fragment + \", \" + day + \")]\";\n    },\n    dayOfMonthBefore: function (fragment, day) {\n        return \"[\" + OPERATOR.dateDayOfMonthBefore + \"(\" + fragment + \", \" + day + \")]\";\n    },\n    dayOfWeek: function (fragment, day) {\n        return \"[\" + OPERATOR.dateDayOfWeek + \"(\" + fragment + \", \" + day + \")]\";\n    },\n    dayOfWeekAfter: function (fragment, day) {\n        return \"[\" + OPERATOR.dateDayOfWeekAfter + \"(\" + fragment + \", \" + day + \")]\";\n    },\n    dayOfWeekBefore: function (fragment, day) {\n        return \"[\" + OPERATOR.dateDayOfWeekBefore + \"(\" + fragment + \", \" + day + \")]\";\n    },\n    month: function (fragment, month) {\n        if (typeof month === 'number') {\n            return \"[\" + OPERATOR.dateMonth + \"(\" + fragment + \", \" + month + \")]\";\n        }\n        else {\n            return \"[\" + OPERATOR.dateMonth + \"(\" + fragment + \", \\\"\" + month + \"\\\")]\";\n        }\n    },\n    monthBefore: function (fragment, month) {\n        if (typeof month === 'number') {\n            return \"[\" + OPERATOR.dateMonthBefore + \"(\" + fragment + \", \" + month + \")]\";\n        }\n        else {\n            return \"[\" + OPERATOR.dateMonthBefore + \"(\" + fragment + \", \\\"\" + month + \"\\\")]\";\n        }\n    },\n    monthAfter: function (fragment, month) {\n        if (typeof month === 'number') {\n            return \"[\" + OPERATOR.dateMonthAfter + \"(\" + fragment + \", \" + month + \")]\";\n        }\n        else {\n            return \"[\" + OPERATOR.dateMonthAfter + \"(\" + fragment + \", \\\"\" + month + \"\\\")]\";\n        }\n    },\n    year: function (fragment, year) {\n        return \"[\" + OPERATOR.dateYear + \"(\" + fragment + \", \" + year + \")]\";\n    },\n    hour: function (fragment, hour) {\n        return \"[\" + OPERATOR.dateHour + \"(\" + fragment + \", \" + hour + \")]\";\n    },\n    hourBefore: function (fragment, hour) {\n        return \"[\" + OPERATOR.dateHourBefore + \"(\" + fragment + \", \" + hour + \")]\";\n    },\n    hourAfter: function (fragment, hour) {\n        return \"[\" + OPERATOR.dateHourAfter + \"(\" + fragment + \", \" + hour + \")]\";\n    }\n};\nvar number = {\n    gt: function (fragment, value) {\n        return \"[\" + OPERATOR.numberGt + \"(\" + fragment + \", \" + value + \")]\";\n    },\n    lt: function (fragment, value) {\n        return \"[\" + OPERATOR.numberLt + \"(\" + fragment + \", \" + value + \")]\";\n    },\n    inRange: function (fragment, before, after) {\n        return \"[\" + OPERATOR.numberInRange + \"(\" + fragment + \", \" + before + \", \" + after + \")]\";\n    }\n};\nexports[\"default\"] = {\n    at: function (fragment, value) {\n        return \"[\" + OPERATOR.at + \"(\" + fragment + \", \" + encode(value) + \")]\";\n    },\n    not: function (fragment, value) {\n        return \"[\" + OPERATOR.not + \"(\" + fragment + \", \" + encode(value) + \")]\";\n    },\n    missing: function (fragment) {\n        return \"[\" + OPERATOR.missing + \"(\" + fragment + \")]\";\n    },\n    has: function (fragment) {\n        return \"[\" + OPERATOR.has + \"(\" + fragment + \")]\";\n    },\n    any: function (fragment, values) {\n        return \"[\" + OPERATOR.any + \"(\" + fragment + \", \" + encode(values) + \")]\";\n    },\n    \"in\": function (fragment, values) {\n        return \"[\" + OPERATOR[\"in\"] + \"(\" + fragment + \", \" + encode(values) + \")]\";\n    },\n    fulltext: function (fragment, value) {\n        return \"[\" + OPERATOR.fulltext + \"(\" + fragment + \", \" + encode(value) + \")]\";\n    },\n    similar: function (documentId, maxResults) {\n        return \"[\" + OPERATOR.similar + \"(\\\"\" + documentId + \"\\\", \" + maxResults + \")]\";\n    },\n    date: date,\n    dateBefore: date.before,\n    dateAfter: date.after,\n    dateBetween: date.between,\n    dayOfMonth: date.dayOfMonth,\n    dayOfMonthAfter: date.dayOfMonthAfter,\n    dayOfMonthBefore: date.dayOfMonthBefore,\n    dayOfWeek: date.dayOfWeek,\n    dayOfWeekAfter: date.dayOfWeekAfter,\n    dayOfWeekBefore: date.dayOfWeekBefore,\n    month: date.month,\n    monthBefore: date.monthBefore,\n    monthAfter: date.monthAfter,\n    year: date.year,\n    hour: date.hour,\n    hourBefore: date.hourBefore,\n    hourAfter: date.hourAfter,\n    number: number,\n    gt: number.gt,\n    lt: number.lt,\n    inRange: number.inRange,\n    near: geopoint.near,\n    geopoint: geopoint\n};\n\n\n//# sourceURL=webpack://PrismicJS/./src/Predicates.ts?");

/***/ }),

/***/ "./src/ResolvedApi.ts":
/*!****************************!*\
  !*** ./src/ResolvedApi.ts ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar experiments_1 = __webpack_require__(/*! ./experiments */ \"./src/experiments.ts\");\nvar form_1 = __webpack_require__(/*! ./form */ \"./src/form.ts\");\nvar Predicates_1 = __webpack_require__(/*! ./Predicates */ \"./src/Predicates.ts\");\nvar Cookies_1 = __webpack_require__(/*! ./Cookies */ \"./src/Cookies.ts\");\nexports.PREVIEW_COOKIE = 'io.prismic.preview';\nexports.EXPERIMENT_COOKIE = 'io.prismic.experiment';\nvar ResolvedApi = (function () {\n    function ResolvedApi(data, httpClient, options) {\n        this.data = data;\n        this.masterRef = data.refs.filter(function (ref) { return ref.isMasterRef; })[0];\n        this.experiments = new experiments_1.Experiments(data.experiments);\n        this.bookmarks = data.bookmarks;\n        this.httpClient = httpClient;\n        this.options = options;\n        this.refs = data.refs;\n        this.tags = data.tags;\n        this.types = data.types;\n    }\n    /**\n     * Returns a useable form from its id, as described in the RESTful description of the API.\n     * For instance: api.form(\"everything\") works on every repository (as \"everything\" exists by default)\n     * You can then chain the calls: api.form(\"everything\").query('[[:d = at(document.id, \"UkL0gMuvzYUANCpf\")]]').ref(ref).submit()\n     */\n    ResolvedApi.prototype.form = function (formId) {\n        var form = this.data.forms[formId];\n        if (form) {\n            return new form_1.SearchForm(form, this.httpClient);\n        }\n        return null;\n    };\n    ResolvedApi.prototype.everything = function () {\n        var f = this.form('everything');\n        if (!f)\n            throw new Error('Missing everything form');\n        return f;\n    };\n    /**\n     * The ID of the master ref on this prismic.io API.\n     * Do not use like this: searchForm.ref(api.master()).\n     * Instead, set your ref once in a variable, and call it when you need it; this will allow to change the ref you're viewing easily for your entire page.\n     */\n    ResolvedApi.prototype.master = function () {\n        return this.masterRef.ref;\n    };\n    /**\n     * Returns the ref ID for a given ref's label.\n     * Do not use like this: searchForm.ref(api.ref(\"Future release label\")).\n     * Instead, set your ref once in a variable, and call it when you need it; this will allow to change the ref you're viewing easily for your entire page.\n     */\n    ResolvedApi.prototype.ref = function (label) {\n        var ref = this.data.refs.filter(function (ref) { return ref.label === label; })[0];\n        return ref ? ref.ref : null;\n    };\n    ResolvedApi.prototype.currentExperiment = function () {\n        return this.experiments.current();\n    };\n    /**\n     * Query the repository\n     */\n    ResolvedApi.prototype.query = function (q, optionsOrCallback, cb) {\n        if (cb === void 0) { cb = function () { }; }\n        var _a = typeof optionsOrCallback === 'function'\n            ? { options: {}, callback: optionsOrCallback }\n            : { options: optionsOrCallback || {}, callback: cb }, options = _a.options, callback = _a.callback;\n        var form = this.everything();\n        for (var key in options) {\n            form = form.set(key, options[key]);\n        }\n        if (!options.ref) {\n            // Look in cookies if we have a ref (preview or experiment)\n            var cookieString = '';\n            if (this.options.req) {\n                cookieString = this.options.req.headers['cookie'] || '';\n            }\n            else if (typeof window !== 'undefined' && window.document) {\n                cookieString = window.document.cookie || '';\n            }\n            var cookies = Cookies_1[\"default\"].parse(cookieString);\n            var previewRef = cookies[exports.PREVIEW_COOKIE];\n            var experimentRef = this.experiments.refFromCookie(cookies[exports.EXPERIMENT_COOKIE]);\n            form = form.ref(previewRef || experimentRef || this.masterRef.ref);\n        }\n        if (q) {\n            form.query(q);\n        }\n        return form.submit(callback);\n    };\n    /**\n     * Retrieve the document returned by the given query\n     * @param {string|array|Predicate} the query\n     * @param {object} additional parameters. In NodeJS, pass the request as 'req'.\n     * @param {function} callback(err, doc)\n     */\n    ResolvedApi.prototype.queryFirst = function (q, optionsOrCallback, cb) {\n        var _a = typeof optionsOrCallback === 'function'\n            ? { options: {}, callback: optionsOrCallback }\n            : { options: optionsOrCallback || {}, callback: cb || (function () { }) }, options = _a.options, callback = _a.callback;\n        options.page = 1;\n        options.pageSize = 1;\n        return this.query(q, options).then(function (response) {\n            var document = response && response.results && response.results[0];\n            callback(null, document);\n            return document;\n        })[\"catch\"](function (error) {\n            callback(error);\n            throw error;\n        });\n    };\n    /**\n     * Retrieve the document with the given id\n     */\n    ResolvedApi.prototype.getByID = function (id, maybeOptions, cb) {\n        var options = maybeOptions || {};\n        if (!options.lang)\n            options.lang = '*';\n        return this.queryFirst(Predicates_1[\"default\"].at('document.id', id), options, cb);\n    };\n    /**\n     * Retrieve multiple documents from an array of id\n     */\n    ResolvedApi.prototype.getByIDs = function (ids, maybeOptions, cb) {\n        var options = maybeOptions || {};\n        if (!options.lang)\n            options.lang = '*';\n        return this.query(Predicates_1[\"default\"][\"in\"]('document.id', ids), options, cb);\n    };\n    /**\n     * Retrieve the document with the given uid\n     */\n    ResolvedApi.prototype.getByUID = function (type, uid, maybeOptions, cb) {\n        var options = maybeOptions || {};\n        if (!options.lang)\n            options.lang = '*';\n        return this.queryFirst(Predicates_1[\"default\"].at(\"my.\" + type + \".uid\", uid), options, cb);\n    };\n    /**\n     * Retrieve the singleton document with the given type\n     */\n    ResolvedApi.prototype.getSingle = function (type, maybeOptions, cb) {\n        var options = maybeOptions || {};\n        return this.queryFirst(Predicates_1[\"default\"].at('document.type', type), options, cb);\n    };\n    /**\n     * Retrieve the document with the given bookmark\n     */\n    ResolvedApi.prototype.getBookmark = function (bookmark, maybeOptions, cb) {\n        var id = this.data.bookmarks[bookmark];\n        if (id) {\n            return this.getByID(id, maybeOptions, cb);\n        }\n        else {\n            return Promise.reject('Error retrieving bookmarked id');\n        }\n    };\n    ResolvedApi.prototype.previewSession = function (token, linkResolver, defaultUrl, cb) {\n        var _this = this;\n        return this.httpClient.request(token).then(function (result) {\n            if (!result.mainDocument) {\n                cb && cb(null, defaultUrl);\n                return Promise.resolve(defaultUrl);\n            }\n            else {\n                return _this.getByID(result.mainDocument, { ref: token }).then(function (document) {\n                    if (!document) {\n                        cb && cb(null, defaultUrl);\n                        return defaultUrl;\n                    }\n                    else {\n                        var url = linkResolver(document);\n                        cb && cb(null, url);\n                        return url;\n                    }\n                });\n            }\n        })[\"catch\"](function (error) {\n            cb && cb(error);\n            throw error;\n        });\n    };\n    return ResolvedApi;\n}());\nexports[\"default\"] = ResolvedApi;\n\n\n//# sourceURL=webpack://PrismicJS/./src/ResolvedApi.ts?");

/***/ }),

/***/ "./src/cache.ts":
/*!**********************!*\
  !*** ./src/cache.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar lru_1 = __webpack_require__(/*! ./lru */ \"./src/lru.ts\");\nvar DefaultApiCache = (function () {\n    function DefaultApiCache(limit) {\n        if (limit === void 0) { limit = 1000; }\n        this.lru = lru_1.MakeLRUCache(limit);\n    }\n    DefaultApiCache.prototype.isExpired = function (key) {\n        var value = this.lru.get(key, false);\n        if (value) {\n            return value.expiredIn !== 0 && value.expiredIn < Date.now();\n        }\n        else {\n            return false;\n        }\n    };\n    DefaultApiCache.prototype.get = function (key, cb) {\n        var value = this.lru.get(key, false);\n        if (value && !this.isExpired(key)) {\n            cb(null, value.data);\n        }\n        else {\n            cb && cb(null);\n        }\n    };\n    DefaultApiCache.prototype.set = function (key, value, ttl, cb) {\n        this.lru.remove(key);\n        this.lru.put(key, {\n            data: value,\n            expiredIn: ttl ? (Date.now() + (ttl * 1000)) : 0\n        });\n        cb && cb(null);\n    };\n    DefaultApiCache.prototype.remove = function (key, cb) {\n        this.lru.remove(key);\n        cb && cb(null);\n    };\n    DefaultApiCache.prototype.clear = function (cb) {\n        this.lru.removeAll();\n        cb && cb(null);\n    };\n    return DefaultApiCache;\n}());\nexports.DefaultApiCache = DefaultApiCache;\n\n\n//# sourceURL=webpack://PrismicJS/./src/cache.ts?");

/***/ }),

/***/ "./src/client.ts":
/*!***********************!*\
  !*** ./src/client.ts ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar form_1 = __webpack_require__(/*! ./form */ \"./src/form.ts\");\nvar Api_1 = __webpack_require__(/*! ./Api */ \"./src/Api.ts\");\nvar DefaultClient = (function () {\n    function DefaultClient(url, options) {\n        this.api = new Api_1[\"default\"](url, options);\n    }\n    DefaultClient.prototype.getApi = function () {\n        return this.api.get();\n    };\n    DefaultClient.prototype.everything = function () {\n        return this.form('everything');\n    };\n    DefaultClient.prototype.form = function (formId) {\n        return new form_1.LazySearchForm(formId, this.api);\n    };\n    DefaultClient.prototype.query = function (q, optionsOrCallback, cb) {\n        return this.getApi().then(function (api) { return api.query(q, optionsOrCallback, cb); });\n    };\n    DefaultClient.prototype.queryFirst = function (q, optionsOrCallback, cb) {\n        return this.getApi().then(function (api) { return api.queryFirst(q, optionsOrCallback, cb); });\n    };\n    DefaultClient.prototype.getByID = function (id, options, cb) {\n        return this.getApi().then(function (api) { return api.getByID(id, options, cb); });\n    };\n    DefaultClient.prototype.getByIDs = function (ids, options, cb) {\n        return this.getApi().then(function (api) { return api.getByIDs(ids, options, cb); });\n    };\n    DefaultClient.prototype.getByUID = function (type, uid, options, cb) {\n        return this.getApi().then(function (api) { return api.getByUID(type, uid, options, cb); });\n    };\n    DefaultClient.prototype.getSingle = function (type, options, cb) {\n        return this.getApi().then(function (api) { return api.getSingle(type, options, cb); });\n    };\n    DefaultClient.prototype.getBookmark = function (bookmark, options, cb) {\n        return this.getApi().then(function (api) { return api.getBookmark(bookmark, options, cb); });\n    };\n    DefaultClient.prototype.previewSession = function (token, linkResolver, defaultUrl, cb) {\n        return this.getApi().then(function (api) { return api.previewSession(token, linkResolver, defaultUrl, cb); });\n    };\n    DefaultClient.getApi = function (url, options) {\n        var api = new Api_1[\"default\"](url, options);\n        return api.get();\n    };\n    return DefaultClient;\n}());\nexports.DefaultClient = DefaultClient;\n\n\n//# sourceURL=webpack://PrismicJS/./src/client.ts?");

/***/ }),

/***/ "./src/experiments.ts":
/*!****************************!*\
  !*** ./src/experiments.ts ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar Variation = (function () {\n    function Variation(data) {\n        this.data = {};\n        this.data = data;\n    }\n    Variation.prototype.id = function () {\n        return this.data.id;\n    };\n    Variation.prototype.ref = function () {\n        return this.data.ref;\n    };\n    Variation.prototype.label = function () {\n        return this.data.label;\n    };\n    return Variation;\n}());\nexports.Variation = Variation;\nvar Experiment = (function () {\n    function Experiment(data) {\n        this.data = {};\n        this.data = data;\n        this.variations = (data.variations || []).map(function (v) {\n            return new Variation(v);\n        });\n    }\n    Experiment.prototype.id = function () {\n        return this.data.id;\n    };\n    Experiment.prototype.googleId = function () {\n        return this.data.googleId;\n    };\n    Experiment.prototype.name = function () {\n        return this.data.name;\n    };\n    return Experiment;\n}());\nexports.Experiment = Experiment;\nvar Experiments = (function () {\n    function Experiments(data) {\n        if (data) {\n            this.drafts = (data.drafts || []).map(function (exp) {\n                return new Experiment(exp);\n            });\n            this.running = (data.running || []).map(function (exp) {\n                return new Experiment(exp);\n            });\n        }\n    }\n    Experiments.prototype.current = function () {\n        if (this.running.length > 0) {\n            return this.running[0];\n        }\n        else {\n            return null;\n        }\n    };\n    Experiments.prototype.refFromCookie = function (cookie) {\n        if (!cookie || cookie.trim() === '')\n            return null;\n        var splitted = cookie.trim().split(' ');\n        if (splitted.length < 2)\n            return null;\n        var expId = splitted[0];\n        var varIndex = parseInt(splitted[1], 10);\n        var exp = this.running.filter(function (exp) {\n            return exp.googleId() === expId && exp.variations.length > varIndex;\n        })[0];\n        return exp ? exp.variations[varIndex].ref() : null;\n    };\n    return Experiments;\n}());\nexports.Experiments = Experiments;\n\n\n//# sourceURL=webpack://PrismicJS/./src/experiments.ts?");

/***/ }),

/***/ "./src/form.ts":
/*!*********************!*\
  !*** ./src/form.ts ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\nvar LazySearchForm = (function () {\n    function LazySearchForm(id, api) {\n        this.id = id;\n        this.api = api;\n        this.fields = {};\n    }\n    LazySearchForm.prototype.set = function (key, value) {\n        this.fields[key] = value;\n        return this;\n    };\n    LazySearchForm.prototype.ref = function (ref) {\n        return this.set('ref', ref);\n    };\n    LazySearchForm.prototype.query = function (query) {\n        return this.set('q', query);\n    };\n    LazySearchForm.prototype.pageSize = function (size) {\n        return this.set('pageSize', size);\n    };\n    LazySearchForm.prototype.fetch = function (fields) {\n        return this.set('fetch', fields);\n    };\n    LazySearchForm.prototype.fetchLinks = function (fields) {\n        return this.set('fetchLinks', fields);\n    };\n    LazySearchForm.prototype.lang = function (langCode) {\n        return this.set('lang', langCode);\n    };\n    LazySearchForm.prototype.page = function (p) {\n        return this.set('page', p);\n    };\n    LazySearchForm.prototype.after = function (documentId) {\n        return this.set('after', documentId);\n    };\n    LazySearchForm.prototype.orderings = function (orderings) {\n        return this.set('orderings', orderings);\n    };\n    LazySearchForm.prototype.url = function () {\n        var _this = this;\n        return this.api.get().then(function (api) {\n            return LazySearchForm.toSearchForm(_this, api).url();\n        });\n    };\n    LazySearchForm.prototype.submit = function (cb) {\n        var _this = this;\n        return this.api.get().then(function (api) {\n            return LazySearchForm.toSearchForm(_this, api).submit(cb);\n        });\n    };\n    LazySearchForm.toSearchForm = function (lazyForm, api) {\n        var form = api.form(lazyForm.id);\n        if (form) {\n            return Object.keys(lazyForm.fields).reduce(function (form, fieldKey) {\n                var fieldValue = lazyForm.fields[fieldKey];\n                if (fieldKey === 'q') {\n                    return form.query(fieldValue);\n                }\n                else if (fieldKey === 'pageSize') {\n                    return form.pageSize(fieldValue);\n                }\n                else if (fieldKey === 'fetch') {\n                    return form.fetch(fieldValue);\n                }\n                else if (fieldKey === 'fetchLinks') {\n                    return form.fetchLinks(fieldValue);\n                }\n                else if (fieldKey === 'lang') {\n                    return form.lang(fieldValue);\n                }\n                else if (fieldKey === 'page') {\n                    return form.page(fieldValue);\n                }\n                else if (fieldKey === 'after') {\n                    return form.after(fieldValue);\n                }\n                else if (fieldKey === 'orderings') {\n                    return form.orderings(fieldValue);\n                }\n                else {\n                    return form.set(fieldKey, fieldValue);\n                }\n            }, form);\n        }\n        else {\n            throw new Error(\"Unable to access to form \" + lazyForm.id);\n        }\n    };\n    return LazySearchForm;\n}());\nexports.LazySearchForm = LazySearchForm;\nvar SearchForm = (function () {\n    function SearchForm(form, httpClient) {\n        this.httpClient = httpClient;\n        this.form = form;\n        this.data = {};\n        for (var field in form.fields) {\n            if (form.fields[field]['default']) {\n                this.data[field] = [form.fields[field]['default']];\n            }\n        }\n    }\n    SearchForm.prototype.set = function (field, value) {\n        var fieldDesc = this.form.fields[field];\n        if (!fieldDesc)\n            throw new Error('Unknown field ' + field);\n        var checkedValue = value === '' || value === undefined ? null : value;\n        var values = this.data[field] || [];\n        if (fieldDesc.multiple) {\n            values = checkedValue ? values.concat([checkedValue]) : values;\n        }\n        else {\n            values = checkedValue ? [checkedValue] : values;\n        }\n        this.data[field] = values;\n        return this;\n    };\n    /**\n     * Sets a ref to query on for this SearchForm. This is a mandatory\n     * method to call before calling submit(), and api.form('everything').submit()\n     * will not work.\n     */\n    SearchForm.prototype.ref = function (ref) {\n        return this.set('ref', ref);\n    };\n    /**\n     * Sets a predicate-based query for this SearchForm. This is where you\n     * paste what you compose in your prismic.io API browser.\n     */\n    SearchForm.prototype.query = function (query) {\n        if (typeof query === 'string') {\n            return this.query([query]);\n        }\n        else if (query instanceof Array) {\n            return this.set('q', \"[\" + query.join('') + \"]\");\n        }\n        else {\n            throw new Error(\"Invalid query : \" + query);\n        }\n    };\n    /**\n     * Sets a page size to query for this SearchForm. This is an optional method.\n     *\n     * @param {number} size - The page size\n     * @returns {SearchForm} - The SearchForm itself\n     */\n    SearchForm.prototype.pageSize = function (size) {\n        return this.set('pageSize', size);\n    };\n    /**\n     * Restrict the results document to the specified fields\n     */\n    SearchForm.prototype.fetch = function (fields) {\n        var strFields = fields instanceof Array ? fields.join(',') : fields;\n        return this.set('fetch', strFields);\n    };\n    /**\n     * Include the requested fields in the DocumentLink instances in the result\n     */\n    SearchForm.prototype.fetchLinks = function (fields) {\n        var strFields = fields instanceof Array ? fields.join(',') : fields;\n        return this.set('fetchLinks', strFields);\n    };\n    /**\n     * Sets the language to query for this SearchForm. This is an optional method.\n     */\n    SearchForm.prototype.lang = function (langCode) {\n        return this.set('lang', langCode);\n    };\n    /**\n     * Sets the page number to query for this SearchForm. This is an optional method.\n     */\n    SearchForm.prototype.page = function (p) {\n        return this.set('page', p);\n    };\n    /**\n     * Remove all the documents except for those after the specified document in the list. This is an optional method.\n     */\n    SearchForm.prototype.after = function (documentId) {\n        return this.set('after', documentId);\n    };\n    /**\n     * Sets the orderings to query for this SearchForm. This is an optional method.\n     */\n    SearchForm.prototype.orderings = function (orderings) {\n        if (!orderings) {\n            return this;\n        }\n        else {\n            return this.set('orderings', \"[\" + orderings.join(',') + \"]\");\n        }\n    };\n    /**\n     * Build the URL to query\n     */\n    SearchForm.prototype.url = function () {\n        var url = this.form.action;\n        if (this.data) {\n            var sep = (url.indexOf('?') > -1 ? '&' : '?');\n            for (var key in this.data) {\n                if (this.data.hasOwnProperty(key)) {\n                    var values = this.data[key];\n                    if (values) {\n                        for (var i = 0; i < values.length; i++) {\n                            url += sep + key + '=' + encodeURIComponent(values[i]);\n                            sep = '&';\n                        }\n                    }\n                }\n            }\n        }\n        return url;\n    };\n    /**\n     * Submits the query, and calls the callback function.\n     */\n    SearchForm.prototype.submit = function (cb) {\n        return this.httpClient.cachedRequest(this.url()).then(function (response) {\n            cb && cb(null, response);\n            return response;\n        })[\"catch\"](function (error) {\n            cb && cb(error);\n            throw error;\n        });\n    };\n    return SearchForm;\n}());\nexports.SearchForm = SearchForm;\n\n\n//# sourceURL=webpack://PrismicJS/./src/form.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Predicates_1 = __webpack_require__(/*! ./Predicates */ \"./src/Predicates.ts\");\nvar experiments_1 = __webpack_require__(/*! ./experiments */ \"./src/experiments.ts\");\nvar client_1 = __webpack_require__(/*! ./client */ \"./src/client.ts\");\nvar Api_1 = __webpack_require__(/*! ./Api */ \"./src/Api.ts\");\nvar ResolvedApi_1 = __webpack_require__(/*! ./ResolvedApi */ \"./src/ResolvedApi.ts\");\nvar Prismic;\n(function (Prismic) {\n    Prismic.experimentCookie = ResolvedApi_1.EXPERIMENT_COOKIE;\n    Prismic.previewCookie = ResolvedApi_1.PREVIEW_COOKIE;\n    Prismic.Predicates = Predicates_1[\"default\"];\n    Prismic.Experiments = experiments_1.Experiments;\n    Prismic.Api = Api_1[\"default\"];\n    function client(url, options) {\n        return new client_1.DefaultClient(url, options);\n    }\n    Prismic.client = client;\n    function getApi(url, options) {\n        return client_1.DefaultClient.getApi(url, options);\n    }\n    Prismic.getApi = getApi;\n    function api(url, options) {\n        return getApi(url, options);\n    }\n    Prismic.api = api;\n})(Prismic || (Prismic = {}));\nmodule.exports = Prismic;\n\n\n//# sourceURL=webpack://PrismicJS/./src/index.ts?");

/***/ }),

/***/ "./src/lru.ts":
/*!********************!*\
  !*** ./src/lru.ts ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n* A doubly linked list-based Least Recently Used (LRU) cache. Will keep most\n* recently used items while discarding least recently used items when its limit\n* is reached.\n*\n* Licensed under MIT. Copyright (c) 2010 Rasmus Andersson <http://hunch.se/>\n* Typescript-ified by Oleksandr Nikitin <https://tvori.info>\n*\n* Illustration of the design:\n*\n*       entry             entry             entry             entry\n*       ______            ______            ______            ______\n*      | head |.newer => |      |.newer => |      |.newer => | tail |\n*      |  A   |          |  B   |          |  C   |          |  D   |\n*      |______| <= older.|______| <= older.|______| <= older.|______|\n*\n*  removed  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  added\n*/\nexports.__esModule = true;\nfunction MakeLRUCache(limit) {\n    return new LRUCache(limit);\n}\nexports.MakeLRUCache = MakeLRUCache;\nfunction LRUCache(limit) {\n    // Current size of the cache. (Read-only).\n    this.size = 0;\n    // Maximum number of items this cache can hold.\n    this.limit = limit;\n    this._keymap = {};\n}\n/**\n * Put <value> into the cache associated with <key>. Returns the entry which was\n * removed to make room for the new entry. Otherwise undefined is returned\n * (i.e. if there was enough room already).\n */\nLRUCache.prototype.put = function (key, value) {\n    var entry = { key: key, value: value };\n    // Note: No protection agains replacing, and thus orphan entries. By design.\n    this._keymap[key] = entry;\n    if (this.tail) {\n        // link previous tail to the new tail (entry)\n        this.tail.newer = entry;\n        entry.older = this.tail;\n    }\n    else {\n        // we're first in -- yay\n        this.head = entry;\n    }\n    // add new entry to the end of the linked list -- it's now the freshest entry.\n    this.tail = entry;\n    if (this.size === this.limit) {\n        // we hit the limit -- remove the head\n        return this.shift();\n    }\n    else {\n        // increase the size counter\n        this.size++;\n    }\n};\n/**\n * Purge the least recently used (oldest) entry from the cache. Returns the\n * removed entry or undefined if the cache was empty.\n *\n * If you need to perform any form of finalization of purged items, this is a\n * good place to do it. Simply override/replace this function:\n *\n *   var c = new LRUCache(123);\n *   c.shift = function() {\n *     var entry = LRUCache.prototype.shift.call(this);\n *     doSomethingWith(entry);\n *     return entry;\n *   }\n */\nLRUCache.prototype.shift = function () {\n    // todo: handle special case when limit == 1\n    var entry = this.head;\n    if (entry) {\n        if (this.head.newer) {\n            this.head = this.head.newer;\n            this.head.older = undefined;\n        }\n        else {\n            this.head = undefined;\n        }\n        // Remove last strong reference to <entry> and remove links from the purged\n        // entry being returned:\n        entry.newer = entry.older = undefined;\n        // delete is slow, but we need to do this to avoid uncontrollable growth:\n        delete this._keymap[entry.key];\n    }\n    console.log('purging ', entry.key);\n    return entry;\n};\n/**\n * Get and register recent use of <key>. Returns the value associated with <key>\n * or undefined if not in cache.\n */\nLRUCache.prototype.get = function (key, returnEntry) {\n    // First, find our cache entry\n    var entry = this._keymap[key];\n    if (entry === undefined)\n        return; // Not cached. Sorry.\n    // As <key> was found in the cache, register it as being requested recently\n    if (entry === this.tail) {\n        // Already the most recently used entry, so no need to update the list\n        return returnEntry ? entry : entry.value;\n    }\n    // HEAD--------------TAIL\n    //   <.older   .newer>\n    //  <--- add direction --\n    //   A  B  C  <D>  E\n    if (entry.newer) {\n        if (entry === this.head)\n            this.head = entry.newer;\n        entry.newer.older = entry.older; // C <-- E.\n    }\n    if (entry.older)\n        entry.older.newer = entry.newer; // C. --> E\n    entry.newer = undefined; // D --x\n    entry.older = this.tail; // D. --> E\n    if (this.tail)\n        this.tail.newer = entry; // E. <-- D\n    this.tail = entry;\n    return returnEntry ? entry : entry.value;\n};\n// ----------------------------------------------------------------------------\n// Following code is optional and can be removed without breaking the core\n// functionality.\n/**\n * Check if <key> is in the cache without registering recent use. Feasible if\n * you do not want to chage the state of the cache, but only \"peek\" at it.\n * Returns the entry associated with <key> if found, or undefined if not found.\n */\nLRUCache.prototype.find = function (key) {\n    return this._keymap[key];\n};\n/**\n * Update the value of entry with <key>. Returns the old value, or undefined if\n * entry was not in the cache.\n */\nLRUCache.prototype.set = function (key, value) {\n    var oldvalue;\n    var entry = this.get(key, true);\n    if (entry) {\n        oldvalue = entry.value;\n        entry.value = value;\n    }\n    else {\n        oldvalue = this.put(key, value);\n        if (oldvalue)\n            oldvalue = oldvalue.value;\n    }\n    return oldvalue;\n};\n/**\n * Remove entry <key> from cache and return its value. Returns undefined if not\n * found.\n */\nLRUCache.prototype.remove = function (key) {\n    var entry = this._keymap[key];\n    if (!entry)\n        return;\n    delete this._keymap[entry.key]; // need to do delete unfortunately\n    if (entry.newer && entry.older) {\n        // relink the older entry with the newer entry\n        entry.older.newer = entry.newer;\n        entry.newer.older = entry.older;\n    }\n    else if (entry.newer) {\n        // remove the link to us\n        entry.newer.older = undefined;\n        // link the newer entry to head\n        this.head = entry.newer;\n    }\n    else if (entry.older) {\n        // remove the link to us\n        entry.older.newer = undefined;\n        // link the newer entry to head\n        this.tail = entry.older;\n    }\n    else {\n        this.head = this.tail = undefined;\n    }\n    this.size--;\n    return entry.value;\n};\n/** Removes all entries */\nLRUCache.prototype.removeAll = function () {\n    // This should be safe, as we never expose strong refrences to the outside\n    this.head = this.tail = undefined;\n    this.size = 0;\n    this._keymap = {};\n};\n/**\n * Return an array containing all keys of entries stored in the cache object, in\n * arbitrary order.\n */\nif (typeof Object.keys === 'function') {\n    LRUCache.prototype.keys = function () { return Object.keys(this._keymap); };\n}\nelse {\n    LRUCache.prototype.keys = function () {\n        var keys = [];\n        for (var k in this._keymap)\n            keys.push(k);\n        return keys;\n    };\n}\n/**\n * Call `fun` for each entry. Starting with the newest entry if `desc` is a true\n * value, otherwise starts with the oldest (head) enrty and moves towards the\n * tail.\n *\n * `fun` is called with 3 arguments in the context `context`:\n *   `fun.call(context, Object key, Object value, LRUCache self)`\n */\nLRUCache.prototype.forEach = function (fun, context, desc) {\n    var entry;\n    if (context === true) {\n        desc = true;\n        context = undefined;\n    }\n    else if (typeof context !== 'object')\n        context = this;\n    if (desc) {\n        entry = this.tail;\n        while (entry) {\n            fun.call(context, entry.key, entry.value, this);\n            entry = entry.older;\n        }\n    }\n    else {\n        entry = this.head;\n        while (entry) {\n            fun.call(context, entry.key, entry.value, this);\n            entry = entry.newer;\n        }\n    }\n};\n/** Returns a JSON (array) representation */\n//LRUCache.prototype.toJSON = function () {\n//    var s: IEntry[] = [], entry = this.head;\n//    while (entry) {\n//        s.push({ key: entry.key.toJSON(), value: entry.value.toJSON() });\n//        entry = entry.newer;\n//    }\n//    return s;\n//};\n/** Returns a String representation */\nLRUCache.prototype.toString = function () {\n    var s = '', entry = this.head;\n    while (entry) {\n        s += String(entry.key) + ':' + entry.value;\n        entry = entry.newer;\n        if (entry)\n            s += ' < ';\n    }\n    return s;\n};\n// Export ourselves\n//if (typeof this === 'object') this.LRUCache = LRUCache; \n\n\n//# sourceURL=webpack://PrismicJS/./src/lru.ts?");

/***/ }),

/***/ "./src/request.ts":
/*!************************!*\
  !*** ./src/request.ts ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.__esModule = true;\n// Number of maximum simultaneous connections to the prismic server\nvar MAX_CONNECTIONS = 20;\n// Number of requests currently running (capped by MAX_CONNECTIONS)\nvar running = 0;\n// Requests in queue\nvar queue = [];\nfunction fetchRequest(url, options, callback) {\n    var fetchOptions = {\n        headers: {\n            Accept: 'application/json'\n        }\n    };\n    if (options && options.proxyAgent) {\n        fetchOptions.agent = options.proxyAgent;\n    }\n    fetch(url, fetchOptions).then(function (xhr) {\n        if (~~(xhr.status / 100 !== 2)) {\n            /**\n             * @description\n             * drain the xhr before throwing an error to prevent memory leaks\n             * @link https://github.com/bitinn/node-fetch/issues/83\n             */\n            return xhr.text().then(function () {\n                var e = new Error(\"Unexpected status code [\" + xhr.status + \"] on URL \" + url);\n                e.status = xhr.status;\n                throw e;\n            });\n        }\n        else {\n            return xhr.json().then(function (result) {\n                var cacheControl = xhr.headers.get('cache-control');\n                var parsedCacheControl = cacheControl ? /max-age=(\\d+)/.exec(cacheControl) : null;\n                var ttl = parsedCacheControl ? parseInt(parsedCacheControl[1], 10) : undefined;\n                callback(null, result, xhr, ttl);\n            });\n        }\n    })[\"catch\"](callback);\n}\nfunction processQueue(options) {\n    if (queue.length > 0 && running < MAX_CONNECTIONS) {\n        running++;\n        var req_1 = queue.shift();\n        if (req_1) {\n            fetchRequest(req_1.url, options, function (error, result, xhr, ttl) {\n                running--;\n                req_1.callback(error, result, xhr, ttl);\n                processQueue(options);\n            });\n        }\n    }\n}\nvar DefaultRequestHandler = (function () {\n    function DefaultRequestHandler(options) {\n        this.options = options || {};\n    }\n    DefaultRequestHandler.prototype.request = function (url, callback) {\n        queue.push({ url: url, callback: callback });\n        processQueue(this.options);\n    };\n    return DefaultRequestHandler;\n}());\nexports.DefaultRequestHandler = DefaultRequestHandler;\n\n\n//# sourceURL=webpack://PrismicJS/./src/request.ts?");

/***/ }),

/***/ 0:
/*!*******************************************************************************!*\
  !*** multi promise-polyfill/src/polyfill cross-fetch/polyfill ./src/index.ts ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! promise-polyfill/src/polyfill */\"./node_modules/promise-polyfill/src/polyfill.js\");\n__webpack_require__(/*! cross-fetch/polyfill */\"./node_modules/cross-fetch/dist/browser-polyfill.js\");\nmodule.exports = __webpack_require__(/*! /Volumes/data/hub/lostmyname/prismic-javascript/src/index.ts */\"./src/index.ts\");\n\n\n//# sourceURL=webpack://PrismicJS/multi_promise-polyfill/src/polyfill_cross-fetch/polyfill_./src/index.ts?");

/***/ })

/******/ });
});